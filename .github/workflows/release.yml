name: Publish PyPI

on:
  push:
    tags:
      - '*'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      
      - name: Build changelog message
        id: changelog
        run: |
          tags_no=$(git tag -l | wc -l)
          if [[ "${tags_no}" > 1 ]]; then
            new_tag=$(git describe --abbrev=0) 
            old_tag=$(git describe --abbrev=0 --tags ${new_tag}^)
            content=$(git log ${old_tag}..${new_tag} --oneline --decorate --pretty=format:"%s" | tail -n 1)
            content="${content//'%'/%25}"
            content="${content//$'\n'/%0A}"
            content="${content//$'\r'/%0D}"
          else
            content="Initial release"
          fi
          echo "::set-output name=message::${content}" 
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: |
            ## Changelog
            ${{ steps.changelog.outputs.message }}
          draft: false
          prerelease: false
  
  deploy:
    name: Deploy to PyPI
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine

      - name: Build and publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python setup.py sdist bdist_wheel
          twine upload dist/* --verbose